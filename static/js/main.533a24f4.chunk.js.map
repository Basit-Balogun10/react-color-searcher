{"version":3,"sources":["components/Button.js","components/Color.js","components/Colors.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Button","background","border","borderRadius","buttonText","color","cursor","fontSize","padding","margin","onClick","notFound","style","className","defaultProps","Color","onDelete","position","name","top","right","id","Colors","colors","map","SearchBar","findColors","onAdd","useState","text","setText","type","placeholder","value","onChange","e","target","App","setColors","setNotFound","info","setInfo","useEffect","getColors","a","console","log","fetchColors","colorsFromServer","deleteColor","window","confirm","fetch","method","filter","addColor","headers","body","JSON","stringify","res","json","data","alert","searchText","fetchedColors","foundColors","startsWith","toLowerCase","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.533a24f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({\r\n    background,\r\n    border,\r\n    borderRadius,\r\n    buttonText,\r\n    color,\r\n    cursor,\r\n    fontSize,\r\n    padding,\r\n    margin,\r\n    notFound,\r\n    onClick,\r\n}) => {\r\n    return (\r\n        <button\r\n            style={{\r\n                background: background,\r\n                border: border,\r\n                borderRadius: borderRadius,\r\n                color: color,\r\n                cursor: cursor,\r\n                fontSize: fontSize,\r\n                padding: padding,\r\n                margin: margin,\r\n            }}\r\n            className=\"btn\"\r\n            onClick={onClick}\r\n        >\r\n            {buttonText}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.defaultProps = {\r\n    borderRadius: \"5px\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"15px\",\r\n    padding: \"9px 9px\",\r\n    margin: \"5px\",\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\n\r\nconst Color = ({ color, onDelete }) => {\r\n    return (\r\n        <div style={{ position: \"relative\" }}>\r\n            <div\r\n                className=\"color\"\r\n                style={{\r\n                    background: color.name,\r\n                    border: `1px solid ${\r\n                        color.name === \"white\" ? \"black\" : color.name\r\n                    }`,\r\n                }}\r\n            ></div>\r\n            <div style={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                <Button\r\n                    background=\"red\"\r\n                    border=\"1px solid white\"\r\n                    borderRadius=\"3px\"\r\n                    buttonText=\"Delete\"\r\n                    fontSize=\"13px\"\r\n                    padding=\"3px\"\r\n                    margin=\"2px\"\r\n                    onClick={() => onDelete(color.id)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Color;\r\n","import Color from \"./Color\";\r\nimport React from \"react\";\r\n\r\nconst Colors = ({ colors, onDelete }) => {\r\n    return (\r\n        <div className=\"colors\">\r\n            {colors.map((color) => {\r\n                return <Color key={color.id} color={color} onDelete={onDelete} />;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Colors;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchBar = ({ findColors, notFound, onAdd }) => {\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"search-bar\">\r\n                <form id=\"search-form\">\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Color Name\"\r\n                            value={text}\r\n                            onChange={(e) => {\r\n                                setText(e.target.value);\r\n                                findColors(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"add-color\">\r\n                <Button\r\n                    background={`${notFound ? \"green\" : \"grey\"}`}\r\n                    border={`1px solid ${notFound ? \"green\" : \"grey\"}`}\r\n                    buttonText=\"Add Color\"\r\n                    cursor={`${notFound ? \"pointer\" : \"not-allowed\"}`}\r\n                    notFound={notFound}\r\n                    onClick={() => onAdd({ name: text })}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useState, useEffect } from \"react\";\nimport Colors from \"./components/Colors\";\nimport SearchBar from \"./components/SearchBar\";\nimport React from \"react\";\n\nfunction App() {\n    const [colors, setColors] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [info, setInfo] = useState(\"Loading colors...\");\n\n    useEffect(() => {\n        const getColors = async () => {\n            console.log(\"e call me\");\n            const colorsFromServer = await fetchColors();\n            setColors(colorsFromServer);\n        };\n        getColors();\n    }, []);\n\n    // Delete Color\n    const deleteColor = async (id) => {\n        const confirmDelete = window.confirm(\n            \"The selected color will be deleted and can't be recovered, Are you sure you want to continue?\"\n        );\n        if (confirmDelete) {\n            await fetch(`http://localhost:5000/colors/${id}`, {\n                method: \"DELETE\",\n            });\n            setColors(colors.filter((color) => color.id !== id));\n        }\n    };\n\n    // Fetch color\n    const fetchColor = async (id) => {\n        const res = await fetch(`http://localhost:5000/colors/${id}`);\n        const data = await res.json();\n\n        return data;\n    };\n\n    // Add color\n    const addColor = async (color) => {\n        if (notFound) {\n            const res = await fetch(\"http://localhost:5000/colors\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                body: JSON.stringify(color),\n            });\n\n            const data = await res.json();\n\n            setColors([...colors, data]);\n            alert(\"Color added successfully\");\n        }\n    };\n\n    // Find Colors\n    const findColors = async (searchText) => {\n        const fetchedColors = await fetchColors();\n        const foundColors = fetchedColors.filter((color) =>\n            color.name.startsWith(searchText.toLowerCase())\n        );\n\n        setColors([...foundColors]);\n        if (foundColors.length === 0) {\n            setNotFound(true);\n            setInfo(\n                \"No colour found, please click the 'Add Color' button if you would like to add the color you searched for\"\n            );\n        } else {\n            setNotFound(false);\n        }\n    };\n\n    // Fetch Colors\n    const fetchColors = async () => {\n        const res = await fetch(\"http://localhost:5000/colors\");\n        const data = await res.json();\n\n        return data;\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>React Color Searcher</h1>\n            <SearchBar\n                findColors={findColors}\n                notFound={notFound}\n                onAdd={addColor}\n            />\n            {colors.length > 0 ? (\n                <Colors colors={colors} onDelete={deleteColor} />\n            ) : (\n                info\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}